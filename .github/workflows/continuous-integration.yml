name: Continuous Integration

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '16', '18', '19' ]
    name: Tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - uses: actions/cache@v3
        id: node-modules-cache
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Install package.json dependencies with Yarn
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
          HUSKY_SKIP_INSTALL: true

      - run: npm ci
      - run: npm test

      - name: Command that outputs stdout and stderr
        uses: ./
        id: find
        continue-on-error: true
        with:
          run: find / -maxdepth 2 -iname 'tmp' -type d

      - name: Assert stdout
        if: contains('/tmp', steps.find.outputs.stdout) && contains('/var/tmp', steps.find.outputs.stdout)
        run: exit 1

      - name: Assert stderr
        if: contains('find', steps.find.outputs.stderr) && contains('/root', steps.find.outputs.stderr) && contains('/lost+found', steps.find.outputs.stderr) && contains('Permission denied', steps.find.outputs.stderr)
        run: exit 1

      - name: Test multiline command with environment variable
        uses: ./
        id: multi
        env:
          HELLO: Hello
        with:
          run: |
            echo $HELLO
            echo world!

      - name: Assert stdout
        if: contains('Hello', steps.find.outputs.stdout) && contains('world!', steps.multi.outputs.stdout)
        run: exit 1
      - name: Assert stderr
        if: steps.multi.outputs.stderr != ''
        run: exit 1

      - name: Test unknown shell
        uses: ./
        continue-on-error: true
        id: unknown-shell
        with:
          run: ls -al
          shell: unknown

      - name: Should fail on unknown shell
        if: steps.unknown-shell.outcome != 'failure'
        run: exit 1
